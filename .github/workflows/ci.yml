# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: CI

on:
  push:
    branches:
      - main
      - develop
      - "releases/**"

  pull_request:
    branches:
      - main
      - develop
      - "releases/**"

jobs:
  build_server:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./server

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: "11"
          distribution: "adopt"
      - name: Build with Gradle
        run: ./gradlew build

  build_client:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./client

    strategy:
      matrix:
        node-version: [15.x]

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install dependencies
        run: npm ci
      - name: Run tests
        run: npm run test
      - name: Build
        run: npm run build --if-present

  end2end_test:
    runs-on: ubuntu-latest
    needs: [build_server, build_client]

    strategy:
      matrix:
        node-version: [15.x]

    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: "11"
          distribution: "adopt"

      - name: Run API in background
        working-directory: ./server
        run: |
          ./gradlew assemble
          java -jar -Dspring.profiles.active=production ./build/libs/*.jar &

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - name: Run and test app
        working-directory: ./client
        run: |
          npm ci
          npm start &
          npm run cy:run

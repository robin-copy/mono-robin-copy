# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: CI

on:
  push:
    branches:
      - main
      - develop

  pull_request:
    branches:
      - main
      - develop

      # Publish `v1.2.3` tags as releases.
    tags:
      - v*

env:
  IMAGE_NAME_SERVER: robin-copy-api
  IMAGE_NAME_CLIENT: robin-copy-client

jobs:
  build_server:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./server

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: "11"
          distribution: "adopt"
      - name: Build with Gradle
        run: ./gradlew build

  build_client:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./client

    strategy:
      matrix:
        node-version: [15.x]

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install dependencies
        run: npm ci
      - name: Run tests
        run: npm run test
      - name: Build
        run: npm run build --if-present

  end2end_test:
    runs-on: ubuntu-latest
    # needs: [build_server, build_client]

    strategy:
      matrix:
        node-version: [15.x]

    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: "11"
          distribution: "adopt"

      - name: Run API in background
        working-directory: ./server
        run: |
          ./gradlew assemble
          docker run -e POSTGRES_PASSWORD=aseca2021 -d -p 5432:5432 postgres
          java -jar -Dspring.profiles.active=local ./build/libs/*.jar &

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - name: Run and test app
        working-directory: ./client
        run: |
          npm ci
          npm start &
          npm run cy:run

  publish_server:
    # needs: end2end_test

    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    permissions:
      contents: read
      packages: write

    defaults:
      run:
        working-directory: ./server

    steps:
      - uses: actions/checkout@v2

      - name: Build image
        run: docker build . --file Dockerfile --tag $IMAGE_NAME_SERVER

      - name: Log into registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin

      - name: Push image
        run: |
          IMAGE_ID=docker.pkg.github.com/${{ github.repository }}/$IMAGE_NAME_SERVER

          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

          # Strip git ref prefix from BRANCH_NAME
          BRANCH_NAME=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && BRANCH_NAME=$(echo $BRANCH_NAME | sed -e 's/^v//')

          [ "$BRANCH_NAME" == "main" ] && BRANCH_NAME=production

          echo IMAGE_ID=$IMAGE_ID
          echo BRANCH_NAME=$BRANCH_NAME

          docker tag $IMAGE_NAME_SERVER $IMAGE_ID-$BRANCH_NAME:latest
          docker push $IMAGE_ID-$BRANCH_NAME:latest

  publish_client:
    # needs: end2end_test
    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    permissions:
      contents: read
      packages: write

    defaults:
      run:
        working-directory: ./client

    steps:
      - uses: actions/checkout@v2

      - name: Build image
        run: docker build . --file Dockerfile --tag $IMAGE_NAME_CLIENT

      - name: Log into registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin

      - name: Push image
        run: |
          IMAGE_ID=docker.pkg.github.com/${{ github.repository }}/$IMAGE_NAME_CLIENT

          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

          # Strip git ref prefix from BRANCH_NAME
          BRANCH_NAME=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && BRANCH_NAME=$(echo $BRANCH_NAME | sed -e 's/^v//')

          [ "$BRANCH_NAME" == "main" ] && BRANCH_NAME=production

          echo IMAGE_ID=$IMAGE_ID
          echo BRANCH_NAME=$BRANCH_NAME

          docker tag $IMAGE_NAME_CLIENT $IMAGE_ID-$BRANCH_NAME:latest
          docker push $IMAGE_ID-$BRANCH_NAME:latest
